variable "pm_api_url" {
  type        = string
  description = "This is the target Proxmox API endpoint."
}

variable "pm_api_token_id" {
  type        = string
  description = "This is an API token you have previously created for a specific user."
  sensitive   = true
}

variable "pm_api_token_secret" {
  type        = string
  description = "This uuid is only available when the token was initially created."
  sensitive   = true
}

# Argument reference

variable "vm_name" {
  type        = string
  description = <<EOT
The name of the VM within Proxmox.
If not set will be generated by random_pet
EOT
  default     = ""
}

variable "vm_id" {
  type        = number
  description = <<EOT
The ID of the VM in Proxmox.
The default value of 0 indicates it should use the next available ID in the sequence.
EOT
  default     = 0
}

variable "vm_desc" {
  type        = string
  description = <<EOT
The description of the VM. Shows as the 'Notes' field in the Proxmox GUI.
EOT
  default     = "VM created by Terraform."
}

variable "target_node" {
  type        = string
  description = <<EOT
The name of the Proxmox Node on which to place the VM.
EOT
  default     = "pve1"
}

variable "vm_template" {
  type        = string
  description = "The base VM from which to clone to create the new VM."
}

variable "full_clone" {
  type        = bool
  description = "Set to true to create a full clone, or false to create a linked clone."
  default     = true
}

variable "onboot" {
  type        = bool
  description = <<EOT
Whether to have the VM startup after the PVE node starts.
EOT
  default     = true
}

variable "boot_order" {
  type        = string
  description = <<EOT
The boot order for the VM. For example: "order=scsi0;ide2;net0".
EOT
  default     = "order=scsi0"
}

variable "agent" {
  type        = number
  description = <<EOT
Set to 1 to enable the QEMU Guest Agent.
Note, you must run the qemu-guest-agent daemon in the guest for this to have any effect.
EOT
  default     = 1
}

variable "memory" {
  type        = number
  description = "The amount of memory to allocate to the VM in Megabytes."
  default     = 512
}

variable "sockets" {
  type        = number
  description = "valueThe number of CPU sockets to allocate to the VM."
  default     = 1
}

variable "cores" {
  type        = number
  description = "valueThe number of CPU cores per CPU socket to allocate to the VM."
  default     = 1
}

variable "scsihw" {
  type        = string
  description = <<EOT
The SCSI controller to emulate.
EOT
  default     = "virtio-scsi-pci"

  validation {
    condition = contains(
      [
        "lsi",
        "lsi53c810",
        "megasas",
        "pvscsi",
        "virtio-scsi-pci",
        "virtio-scsi-single"
    ], var.scsihw)
    error_message = "Valid Options: lsi, lsi53c810, megasas, pvscsi, virtio-scsi-pci, virtio-scsi-single."
  }
}

variable "os_type" {
  type        = string
  description = "Which provisioning method to use, based on the OS type."
  default     = "cloud-init"
}

variable "gateway" {
  type        = string
  description = "Network Gatework for first IP address to assign to guest."
}

variable "ip_cidr" {
  type        = string
  description = "Network CIDR for first network interface. Can also be 'dhcp'"
}

variable "tags" {
  type        = string
  description = <<EOT
Tags of the VM. Comma-separated values (e.g. tag1,tag2,tag3).
EOT
  default     = "terraform"
}

# Network Block

variable "network_model" {
  type        = string
  description = <<EOT
Network Card Model. The virtio model provides the best performance with very low CPU overhead.
If your guest does not support this driver, it is usually best to use e1000.
EOT
  default     = "virtio"

  validation {
    condition = contains(
      [
        "e1000",
        "e1000-82540em",
        "e1000-82544gc",
        "e1000-82545em",
        "i82551",
        "i82557b",
        "i82559er",
        "ne2k_isa",
        "ne2k_pci",
        "pcnet",
        "rtl8139",
        "virtio",
        "vmxnet3"
    ], var.network_model)
    error_message = <<EOT
Options: e1000, e1000-82540em, e1000-82544gc, e1000-82545em, i82551, i82557b,
i82559er, ne2k_isa, ne2k_pci, pcnet, rtl8139, virtio, vmxnet3.
EOT
  }
}

variable "network_bridge" {
  type        = string
  description = "Bridge to which the network device should be attached."
  default     = "vmbr0"
}
